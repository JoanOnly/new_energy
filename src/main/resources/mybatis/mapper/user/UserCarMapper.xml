<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxkj.energy.mapper.user.UserCarMapper">
  <resultMap id="BaseResultMap" type="com.zxkj.energy.pojo.user.UserCar">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="car_id" jdbcType="BIGINT" property="carId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="writer_name" jdbcType="VARCHAR" property="writerName" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, car_id, gmt_create, gmt_modified, writer_name, is_delete, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_car
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.zxkj.energy.pojo.user.UserCar">
    insert into user_car (id, user_id, car_id, 
      gmt_create, gmt_modified, writer_name, 
      is_delete, remark)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{carId,jdbcType=BIGINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{writerName,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zxkj.energy.pojo.user.UserCar">
    insert into user_car
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="carId != null">
        car_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="writerName != null">
        writer_name,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="carId != null">
        #{carId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="writerName != null">
        #{writerName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxkj.energy.pojo.user.UserCar">
    update user_car
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="carId != null">
        car_id = #{carId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="writerName != null">
        writer_name = #{writerName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxkj.energy.pojo.user.UserCar">
    update user_car
    set user_id = #{userId,jdbcType=BIGINT},
      car_id = #{carId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      writer_name = #{writerName,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="sql_where">
    <where>
      <if test="userId != null">
         and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="carId != null">
         and car_id = #{carId,jdbcType=BIGINT}
      </if>
      <if test="gmtCreate != null">
         and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="gmtModified != null">
         and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
      </if>
      <if test="writerName != null">
         and writer_name = #{writerName,jdbcType=VARCHAR}
      </if>
      <if test="isDelete != null">
         and is_delete = #{isDelete,jdbcType=TINYINT}
      </if>
      <if test="remark != null">
         and remark = #{remark,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="list" parameterType="com.zxkj.energy.pojo.user.UserCar" resultMap="BaseResultMap">
    select * from user_car
    <include refid="sql_where" />
  </select>
  <select id="find" parameterType="com.zxkj.energy.pojo.user.UserCar" resultMap="BaseResultMap">
    select * from user_car
    <include refid="sql_where" />
  </select>
  <update id="deleteById" parameterType="java.lang.Long">
     update user_car set is_delete = true where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
     insert into user_car ( 
    <include refid="Base_Column_List" />
     ) VALUES 
    <foreach collection="insertList" index="index" item="item" separator=",">
      (
      #{item.id},#{item.userId},#{item.carId},#{item.gmtCreate},#{item.gmtModified},#{item.writerName},#{item.isDelete},#{item.remark}
      )
    </foreach>
  </insert>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach close="" collection="updateList" index="index" item="item" open="" separator=";">
       update user_car
      <set>
        user_id = #{item.userId},car_id = #{item.carId},gmt_create = #{item.gmtCreate},gmt_modified = #{item.gmtModified},writer_name = #{item.writerName},is_delete = #{item.isDelete},remark = #{item.remark}
      </set>
      where id = #{item.id}
    </foreach>
  </update>
</mapper>